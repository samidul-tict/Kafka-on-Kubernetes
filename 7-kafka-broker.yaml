apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
  namespace: kafka
spec:
  replicas: 2
  selector:
    matchLabels:
        app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      hostname: kafka-broker
      containers:
      - name: kafka-broker
        image: confluentinc/cp-kafka:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_BROKER_ID
        - name: KAFKA_ZOOKEEPER_CONNECT
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_ZOOKEEPER_CONNECT
        - name: KAFKA_ADVERTISED_LISTENERS
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_ADVERTISED_LISTENERS
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          valueFrom:
            configMapKeyRef:
              name: kafka-config
              key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        # volumeMounts:
        # - name: kafka-cm
        #   mountPath: /etc/configmap
        #   readOnly: true
        # - name: kafka-data
        #   mountPath: "/bitnami/kafka"
      # volumes:
      # - name: kafka-cm
      #   configMap:
      #     name: kafka-config
      # - name: kafka-data
      #   persistentVolumeClaim:
      #     claimName: kafka-pv-claim
